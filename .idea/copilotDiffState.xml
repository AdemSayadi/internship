<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/front/src/views/CustomPages/Dashboard/EnhancedDashboard.vue">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/front/src/views/CustomPages/Dashboard/EnhancedDashboard.vue" />
              <option name="updatedContent" value="&lt;template&gt;&#10;    &lt;MainLayout&gt;&#10;        &lt;PageHeader &#10;            title=&quot;Code Review Dashboard&quot; &#10;            subtitle=&quot;Monitor your code review activity and performance metrics&quot; &#10;        /&gt;&#10;&#10;        &lt;!-- Quick Actions --&gt;&#10;        &lt;div class=&quot;mt-6 grid grid-cols-1 md:grid-cols-4 gap-4&quot;&gt;&#10;            &lt;StyledButton &#10;                label=&quot;Add Repository&quot; &#10;                icon=&quot;plus&quot; &#10;                @click=&quot;$router.push('/repositories')&quot;&#10;                class=&quot;bg-blue-600 hover:bg-blue-700&quot;&#10;            /&gt;&#10;            &lt;StyledButton &#10;                label=&quot;Submit Code&quot; &#10;                icon=&quot;upload&quot; &#10;                @click=&quot;$router.push('/submissions')&quot;&#10;                class=&quot;bg-green-600 hover:bg-green-700&quot;&#10;            /&gt;&#10;            &lt;StyledButton &#10;                label=&quot;View Pull Requests&quot; &#10;                icon=&quot;git-merge&quot; &#10;                @click=&quot;$router.push('/pull-requests')&quot;&#10;                class=&quot;bg-purple-600 hover:bg-purple-700&quot;&#10;            /&gt;&#10;            &lt;StyledButton &#10;                label=&quot;Review History&quot; &#10;                icon=&quot;comments&quot; &#10;                @click=&quot;$router.push('/reviews')&quot;&#10;                class=&quot;bg-orange-600 hover:bg-orange-700&quot;&#10;            /&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Statistics Overview --&gt;&#10;        &lt;div class=&quot;mt-8 grid grid-cols-1 md:grid-cols-4 gap-6&quot;&gt;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center&quot;&gt;&#10;                    &lt;div class=&quot;p-2 bg-blue-100 rounded-lg&quot;&gt;&#10;                        &lt;i class=&quot;pi pi-folder text-blue-600 text-xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;ml-4&quot;&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Repositories&lt;/p&gt;&#10;                        &lt;p class=&quot;text-2xl font-semibold&quot;&gt;{{ stats.repositories || 0 }}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center&quot;&gt;&#10;                    &lt;div class=&quot;p-2 bg-green-100 rounded-lg&quot;&gt;&#10;                        &lt;i class=&quot;pi pi-git-merge text-green-600 text-xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;ml-4&quot;&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Active PRs&lt;/p&gt;&#10;                        &lt;p class=&quot;text-2xl font-semibold&quot;&gt;{{ stats.activePRs || 0 }}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center&quot;&gt;&#10;                    &lt;div class=&quot;p-2 bg-purple-100 rounded-lg&quot;&gt;&#10;                        &lt;i class=&quot;pi pi-comments text-purple-600 text-xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;ml-4&quot;&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Reviews This Week&lt;/p&gt;&#10;                        &lt;p class=&quot;text-2xl font-semibold&quot;&gt;{{ stats.weeklyReviews || 0 }}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center&quot;&gt;&#10;                    &lt;div class=&quot;p-2 bg-orange-100 rounded-lg&quot;&gt;&#10;                        &lt;i class=&quot;pi pi-star text-orange-600 text-xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;ml-4&quot;&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Avg Score&lt;/p&gt;&#10;                        &lt;p class=&quot;text-2xl font-semibold&quot;&gt;{{ stats.avgScore || 0 }}/10&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Recent Activity --&gt;&#10;        &lt;div class=&quot;mt-8 grid grid-cols-1 lg:grid-cols-2 gap-8&quot;&gt;&#10;            &lt;!-- Recent Pull Requests --&gt;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow&quot;&gt;&#10;                &lt;div class=&quot;p-6 border-b&quot;&gt;&#10;                    &lt;div class=&quot;flex items-center justify-between&quot;&gt;&#10;                        &lt;h3 class=&quot;text-lg font-semibold&quot;&gt;Recent Pull Requests&lt;/h3&gt;&#10;                        &lt;Button &#10;                            label=&quot;View All&quot; &#10;                            text &#10;                            @click=&quot;$router.push('/pull-requests')&quot;&#10;                        /&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;p-6&quot;&gt;&#10;                    &lt;div v-if=&quot;recentPRs.length === 0&quot; class=&quot;text-center py-8 text-gray-500&quot;&gt;&#10;                        &lt;i class=&quot;pi pi-git-merge text-2xl&quot;&gt;&lt;/i&gt;&#10;                        &lt;p class=&quot;mt-2&quot;&gt;No recent pull requests&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div v-else class=&quot;space-y-4&quot;&gt;&#10;                        &lt;div &#10;                            v-for=&quot;pr in recentPRs.slice(0, 5)&quot; &#10;                            :key=&quot;pr.id&quot;&#10;                            class=&quot;flex items-center justify-between p-3 border rounded-lg hover:bg-gray-50 cursor-pointer&quot;&#10;                            @click=&quot;$router.push(`/pull-requests?repository_id=${pr.repository_id}`)&quot;&#10;                        &gt;&#10;                            &lt;div class=&quot;flex-1&quot;&gt;&#10;                                &lt;p class=&quot;font-medium text-gray-900&quot;&gt;{{ pr.title }}&lt;/p&gt;&#10;                                &lt;p class=&quot;text-sm text-gray-500&quot;&gt;{{ pr.repository.name }} • {{ formatDate(pr.created_at) }}&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;Tag &#10;                                :value=&quot;pr.state&quot; &#10;                                :severity=&quot;getStateSeverity(pr.state)&quot;&#10;                                class=&quot;capitalize&quot;&#10;                            /&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Recent Reviews --&gt;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow&quot;&gt;&#10;                &lt;div class=&quot;p-6 border-b&quot;&gt;&#10;                    &lt;div class=&quot;flex items-center justify-between&quot;&gt;&#10;                        &lt;h3 class=&quot;text-lg font-semibold&quot;&gt;Recent Reviews&lt;/h3&gt;&#10;                        &lt;Button &#10;                            label=&quot;View All&quot; &#10;                            text &#10;                            @click=&quot;$router.push('/reviews')&quot;&#10;                        /&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;p-6&quot;&gt;&#10;                    &lt;div v-if=&quot;recentReviews.length === 0&quot; class=&quot;text-center py-8 text-gray-500&quot;&gt;&#10;                        &lt;i class=&quot;pi pi-comments text-2xl&quot;&gt;&lt;/i&gt;&#10;                        &lt;p class=&quot;mt-2&quot;&gt;No recent reviews&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div v-else class=&quot;space-y-4&quot;&gt;&#10;                        &lt;div &#10;                            v-for=&quot;review in recentReviews.slice(0, 5)&quot; &#10;                            :key=&quot;review.id&quot;&#10;                            class=&quot;flex items-center justify-between p-3 border rounded-lg hover:bg-gray-50&quot;&#10;                        &gt;&#10;                            &lt;div class=&quot;flex-1&quot;&gt;&#10;                                &lt;p class=&quot;font-medium text-gray-900&quot;&gt;{{ review.submission?.title || review.pull_request?.title }}&lt;/p&gt;&#10;                                &lt;p class=&quot;text-sm text-gray-500&quot;&gt;&#10;                                    {{ review.review_type === 'ai_auto' ? 'AI Review' : 'Manual Review' }} • &#10;                                    {{ formatDate(review.created_at) }}&#10;                                &lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;flex items-center gap-2&quot;&gt;&#10;                                &lt;span v-if=&quot;review.score&quot; class=&quot;text-sm font-medium&quot;&gt;{{ review.score }}/10&lt;/span&gt;&#10;                                &lt;Tag &#10;                                    :value=&quot;review.status&quot; &#10;                                    :severity=&quot;getReviewStatusSeverity(review.status)&quot;&#10;                                /&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Quick Tips --&gt;&#10;        &lt;div class=&quot;mt-8 bg-blue-50 rounded-lg p-6&quot;&gt;&#10;            &lt;h3 class=&quot;text-lg font-semibold text-blue-900 mb-4&quot;&gt;Quick Tips&lt;/h3&gt;&#10;            &lt;div class=&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;&gt;&#10;                &lt;div class=&quot;flex items-start gap-3&quot;&gt;&#10;                    &lt;i class=&quot;pi pi-lightbulb text-blue-600 mt-1&quot;&gt;&lt;/i&gt;&#10;                    &lt;div&gt;&#10;                        &lt;h4 class=&quot;font-medium text-blue-900&quot;&gt;Set up GitHub Integration&lt;/h4&gt;&#10;                        &lt;p class=&quot;text-sm text-blue-700&quot;&gt;Connect your GitHub account to automatically receive pull request reviews.&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;flex items-start gap-3&quot;&gt;&#10;                    &lt;i class=&quot;pi pi-lightbulb text-blue-600 mt-1&quot;&gt;&lt;/i&gt;&#10;                    &lt;div&gt;&#10;                        &lt;h4 class=&quot;font-medium text-blue-900&quot;&gt;Configure AI Review Settings&lt;/h4&gt;&#10;                        &lt;p class=&quot;text-sm text-blue-700&quot;&gt;Customize AI review criteria to match your coding standards.&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/MainLayout&gt;&#10;&lt;/template&gt;&#10;&#10;&lt;script setup&gt;&#10;import { ref, onMounted } from 'vue';&#10;import { useRouter } from 'vue-router';&#10;import { useToast } from 'primevue/usetoast';&#10;import Button from 'primevue/button';&#10;import Tag from 'primevue/tag';&#10;import MainLayout from '@/components/CustomComponents/MainLayout.vue';&#10;import PageHeader from '@/components/CustomComponents/PageHeader.vue';&#10;import StyledButton from '@/components/CustomComponents/StyledButton.vue';&#10;import { useAuth } from '@/utils/composables/useAuth';&#10;&#10;// State&#10;const stats = ref({});&#10;const recentPRs = ref([]);&#10;const recentReviews = ref([]);&#10;const loading = ref(false);&#10;&#10;const router = useRouter();&#10;const toast = useToast();&#10;&#10;// API base URL&#10;const API_BASE = import.meta.env.VITE_API_BASE_URL || 'http://localhost:8000/api';&#10;&#10;// Utility functions&#10;const getAuthHeaders = () =&gt; {&#10;    const token = localStorage.getItem('token');&#10;    if (!token) {&#10;        router.push('/auth/login1');&#10;        return null;&#10;    }&#10;    return {&#10;        'Authorization': `Bearer ${token}`,&#10;        'Content-Type': 'application/json',&#10;        'Accept': 'application/json'&#10;    };&#10;};&#10;&#10;const formatDate = (dateString) =&gt; {&#10;    return new Date(dateString).toLocaleDateString('en-US', {&#10;        year: 'numeric',&#10;        month: 'short',&#10;        day: 'numeric'&#10;    });&#10;};&#10;&#10;const getStateSeverity = (state) =&gt; {&#10;    switch (state) {&#10;        case 'open': return 'success';&#10;        case 'merged': return 'info';&#10;        case 'closed': return 'warning';&#10;        default: return 'secondary';&#10;    }&#10;};&#10;&#10;const getReviewStatusSeverity = (status) =&gt; {&#10;    switch (status) {&#10;        case 'completed': return 'success';&#10;        case 'pending': return 'warning';&#10;        case 'processing': return 'info';&#10;        case 'failed': return 'danger';&#10;        default: return 'secondary';&#10;    }&#10;};&#10;&#10;// API functions&#10;const fetchDashboardData = async () =&gt; {&#10;    try {&#10;        loading.value = true;&#10;        const headers = getAuthHeaders();&#10;        if (!headers) return;&#10;&#10;        const [statsResponse, prsResponse, reviewsResponse] = await Promise.all([&#10;            fetch(`${API_BASE}/dashboard/stats`, { headers }),&#10;            fetch(`${API_BASE}/pull-requests?limit=5`, { headers }),&#10;            fetch(`${API_BASE}/reviews?limit=5`, { headers })&#10;        ]);&#10;&#10;        if (statsResponse.ok) {&#10;            const statsData = await statsResponse.json();&#10;            stats.value = statsData.stats || {};&#10;        }&#10;&#10;        if (prsResponse.ok) {&#10;            const prsData = await prsResponse.json();&#10;            recentPRs.value = prsData.pull_requests?.data || prsData.pull_requests || [];&#10;        }&#10;&#10;        if (reviewsResponse.ok) {&#10;            const reviewsData = await reviewsResponse.json();&#10;            recentReviews.value = reviewsData.reviews?.data || reviewsData.reviews || [];&#10;        }&#10;&#10;    } catch (error) {&#10;        console.error('Error fetching dashboard data:', error);&#10;        toast.add({&#10;            severity: 'error',&#10;            summary: 'Error',&#10;            detail: 'Failed to load dashboard data',&#10;            life: 5000,&#10;        });&#10;    } finally {&#10;        loading.value = false;&#10;    }&#10;};&#10;&#10;// Initialize&#10;const { checkAuth } = useAuth();&#10;&#10;onMounted(async () =&gt; {&#10;    if (!checkAuth()) {&#10;        router.push('/auth/login1');&#10;        return;&#10;    }&#10;    await fetchDashboardData();&#10;});&#10;&lt;/script&gt;&#10;&#10;&lt;style scoped&gt;&#10;@import '@/assets/GlobalStyles.css';&#10;&lt;/style&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/front/src/views/CustomPages/PullRequests.vue">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/front/src/views/CustomPages/PullRequests.vue" />
              <option name="originalContent" value="&lt;template&gt;&#10;    &lt;MainLayout&gt;&#10;        &lt;PageHeader&#10;            title=&quot;Pull Requests&quot;&#10;            :subtitle=&quot;`Manage pull requests ${repository ? 'for ' + repository.name : ''}`&quot;&#10;        /&gt;&#10;&#10;        &lt;!-- Filter Controls --&gt;&#10;        &lt;div class=&quot;mt-6 flex flex-wrap gap-4 items-center&quot;&gt;&#10;            &lt;div class=&quot;flex items-center gap-2&quot;&gt;&#10;                &lt;label class=&quot;text-sm font-medium text-gray-700&quot;&gt;Repository:&lt;/label&gt;&#10;                &lt;Dropdown&#10;                    v-model=&quot;selectedRepositoryId&quot;&#10;                    :options=&quot;repositoryOptions&quot;&#10;                    optionLabel=&quot;label&quot;&#10;                    optionValue=&quot;value&quot;&#10;                    placeholder=&quot;All Repositories&quot;&#10;                    class=&quot;w-48&quot;&#10;                    @change=&quot;fetchPullRequests&quot;&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;flex items-center gap-2&quot;&gt;&#10;                &lt;label class=&quot;text-sm font-medium text-gray-700&quot;&gt;State:&lt;/label&gt;&#10;                &lt;Dropdown&#10;                    v-model=&quot;selectedState&quot;&#10;                    :options=&quot;stateOptions&quot;&#10;                    optionLabel=&quot;label&quot;&#10;                    optionValue=&quot;value&quot;&#10;                    placeholder=&quot;All States&quot;&#10;                    class=&quot;w-32&quot;&#10;                    @change=&quot;fetchPullRequests&quot;&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;Button&#10;                label=&quot;Refresh&quot;&#10;                icon=&quot;pi pi-refresh&quot;&#10;                @click=&quot;fetchPullRequests&quot;&#10;                :loading=&quot;loading&quot;&#10;                class=&quot;ml-auto&quot;&#10;            /&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Statistics Cards --&gt;&#10;        &lt;div class=&quot;mt-6 grid grid-cols-1 md:grid-cols-4 gap-4&quot;&gt;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center&quot;&gt;&#10;                    &lt;div class=&quot;p-2 bg-blue-100 rounded-lg&quot;&gt;&#10;                        &lt;svg class=&quot;octicon octicon-git-pull-request text-blue-600&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 16 16&quot; fill=&quot;currentColor&quot;&gt;&#10;                            &lt;path d=&quot;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&quot;&gt;&lt;/path&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;ml-4&quot;&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Total PRs&lt;/p&gt;&#10;                        &lt;p class=&quot;text-2xl font-semibold&quot;&gt;{{ statistics.total || 0 }}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center&quot;&gt;&#10;                    &lt;div class=&quot;p-2 bg-green-100 rounded-lg&quot;&gt;&#10;                        &lt;i class=&quot;pi pi-check-circle text-green-600 text-xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;ml-4&quot;&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Open&lt;/p&gt;&#10;                        &lt;p class=&quot;text-2xl font-semibold&quot;&gt;{{ statistics.open || 0 }}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center&quot;&gt;&#10;                    &lt;div class=&quot;p-2 bg-purple-100 rounded-lg&quot;&gt;&#10;                        &lt;i class=&quot;pi pi-check text-purple-600 text-xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;ml-4&quot;&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Merged&lt;/p&gt;&#10;                        &lt;p class=&quot;text-2xl font-semibold&quot;&gt;{{ statistics.merged || 0 }}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center&quot;&gt;&#10;                    &lt;div class=&quot;p-2 bg-orange-100 rounded-lg&quot;&gt;&#10;                        &lt;i class=&quot;pi pi-eye text-orange-600 text-xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;ml-4&quot;&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Reviewed&lt;/p&gt;&#10;                        &lt;p class=&quot;text-2xl font-semibold&quot;&gt;{{ statistics.reviewed || 0 }}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Loading state --&gt;&#10;        &lt;div v-if=&quot;loading&quot; class=&quot;mt-8 text-center&quot;&gt;&#10;            &lt;i class=&quot;pi pi-spinner pi-spin text-2xl&quot;&gt;&lt;/i&gt;&#10;            &lt;p class=&quot;mt-2&quot;&gt;Loading pull requests...&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Empty state --&gt;&#10;        &lt;div v-else-if=&quot;pullRequests.length === 0&quot; class=&quot;mt-8 text-center py-12&quot;&gt;&#10;            &lt;i class=&quot;pi pi-git-merge text-6xl text-gray-300&quot;&gt;&lt;/i&gt;&#10;            &lt;h3 class=&quot;mt-4 text-lg font-medium text-gray-900&quot;&gt;No pull requests found&lt;/h3&gt;&#10;            &lt;p class=&quot;mt-2 text-gray-500&quot;&gt;&#10;                {{ selectedState || selectedRepositoryId ? 'Try adjusting your filters' : 'Pull requests will appear here when GitHub webhooks are triggered' }}&#10;            &lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Pull Requests Table --&gt;&#10;        &lt;DataTable&#10;            v-else&#10;            :value=&quot;pullRequests&quot;&#10;            class=&quot;mt-8&quot;&#10;            :paginator=&quot;true&quot;&#10;            :rows=&quot;15&quot;&#10;            :rowsPerPageOptions=&quot;[10, 15, 25]&quot;&#10;            sortMode=&quot;multiple&quot;&#10;        &gt;&#10;            &lt;Column field=&quot;title&quot; header=&quot;Title&quot; sortable&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    &lt;div&gt;&#10;                        &lt;a&#10;                            :href=&quot;slotProps.data.html_url&quot;&#10;                            target=&quot;_blank&quot;&#10;                            class=&quot;font-medium text-indigo-600 hover:text-indigo-900&quot;&#10;                        &gt;&#10;                            {{ slotProps.data.title }}&#10;                        &lt;/a&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-500&quot;&gt;&#10;                            #{{ slotProps.data.github_pr_number }}&#10;                        &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;&#10;            &lt;Column field=&quot;repository.name&quot; header=&quot;Repository&quot; sortable /&gt;&#10;&#10;            &lt;Column field=&quot;state&quot; header=&quot;State&quot; sortable&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    &lt;Tag&#10;                        :value=&quot;slotProps.data.state&quot;&#10;                        :severity=&quot;getStateSeverity(slotProps.data.state)&quot;&#10;                        class=&quot;capitalize&quot;&#10;                    /&gt;&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;&#10;            &lt;Column field=&quot;author_username&quot; header=&quot;Author&quot; sortable&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    &lt;div class=&quot;flex items-center gap-2&quot;&gt;&#10;                        &lt;img&#10;                            v-if=&quot;slotProps.data.author_avatar_url&quot;&#10;                            :src=&quot;slotProps.data.author_avatar_url&quot;&#10;                            :alt=&quot;slotProps.data.author_username&quot;&#10;                            class=&quot;w-6 h-6 rounded-full&quot;&#10;                        &gt;&#10;                        &lt;span&gt;{{ slotProps.data.author_username }}&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;&#10;            &lt;Column field=&quot;head_branch&quot; header=&quot;Branch&quot; sortable&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    &lt;code class=&quot;text-sm bg-gray-100 px-2 py-1 rounded&quot;&gt;&#10;                        {{ slotProps.data.head_branch }}&#10;                    &lt;/code&gt;&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;&#10;            &lt;Column header=&quot;Reviews&quot;&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    &lt;div class=&quot;flex items-center gap-2&quot;&gt;&#10;                        &lt;span class=&quot;text-sm text-gray-600&quot;&gt;&#10;                            {{ slotProps.data.reviews?.length || 0 }} reviews&#10;                        &lt;/span&gt;&#10;                        &lt;Tag&#10;                            v-if=&quot;hasAiReview(slotProps.data.reviews)&quot;&#10;                            value=&quot;AI&quot;&#10;                            severity=&quot;info&quot;&#10;                            class=&quot;text-xs&quot;&#10;                        /&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;&#10;            &lt;Column field=&quot;created_at&quot; header=&quot;Created&quot; sortable&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    {{ formatDate(slotProps.data.created_at) }}&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;&#10;            &lt;Column header=&quot;Actions&quot;&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    &lt;div class=&quot;flex gap-2&quot;&gt;&#10;                        &lt;Button&#10;                            label=&quot;View Reviews&quot;&#10;                            icon=&quot;pi pi-comments&quot;&#10;                            size=&quot;small&quot;&#10;                            text&#10;                            @click=&quot;viewReviews(slotProps.data)&quot;&#10;                        /&gt;&#10;                        &lt;Button&#10;                            v-if=&quot;slotProps.data.state === 'open'&quot;&#10;                            label=&quot;Trigger Review&quot;&#10;                            icon=&quot;pi pi-refresh&quot;&#10;                            size=&quot;small&quot;&#10;                            text&#10;                            @click=&quot;triggerReview(slotProps.data)&quot;&#10;                        /&gt;&#10;                        &lt;Button&#10;                            label=&quot;GitHub&quot;&#10;                            icon=&quot;pi pi-external-link&quot;&#10;                            size=&quot;small&quot;&#10;                            text&#10;                            @click=&quot;() =&gt; window.open(slotProps.data.html_url, '_blank')&quot;&#10;                        /&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;        &lt;/DataTable&gt;&#10;&#10;        &lt;!-- Review Details Dialog --&gt;&#10;        &lt;Dialog&#10;            v-model:visible=&quot;showReviewDialog&quot;&#10;            header=&quot;Pull Request Reviews&quot;&#10;            modal&#10;            class=&quot;w-full max-w-4xl&quot;&#10;        &gt;&#10;            &lt;div v-if=&quot;selectedPullRequest&quot; class=&quot;space-y-6&quot;&gt;&#10;                &lt;!-- PR Info --&gt;&#10;                &lt;div class=&quot;border-b pb-4&quot;&gt;&#10;                    &lt;h3 class=&quot;text-lg font-semibold&quot;&gt;{{ selectedPullRequest.title }}&lt;/h3&gt;&#10;                    &lt;p class=&quot;text-sm text-gray-600 mt-1&quot;&gt;&#10;                        PR #{{ selectedPullRequest.github_pr_number }} by {{ selectedPullRequest.author_username }}&#10;                    &lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Reviews List --&gt;&#10;                &lt;div v-if=&quot;selectedPullRequestReviews.length &gt; 0&quot; class=&quot;space-y-4&quot;&gt;&#10;                    &lt;h4 class=&quot;font-medium&quot;&gt;Reviews ({{ selectedPullRequestReviews.length }})&lt;/h4&gt;&#10;&#10;                    &lt;div&#10;                        v-for=&quot;review in selectedPullRequestReviews&quot;&#10;                        :key=&quot;review.id&quot;&#10;                        class=&quot;border rounded-lg p-4&quot;&#10;                    &gt;&#10;                        &lt;div class=&quot;flex items-center justify-between mb-3&quot;&gt;&#10;                            &lt;div class=&quot;flex items-center gap-2&quot;&gt;&#10;                                &lt;Tag&#10;                                    :value=&quot;review.review_type === 'ai_auto' ? 'AI Review' : 'Manual Review'&quot;&#10;                                    :severity=&quot;review.review_type === 'ai_auto' ? 'info' : 'success'&quot;&#10;                                /&gt;&#10;                                &lt;Tag&#10;                                    :value=&quot;review.status&quot;&#10;                                    :severity=&quot;getReviewStatusSeverity(review.status)&quot;&#10;                                /&gt;&#10;                                &lt;span v-if=&quot;review.score&quot; class=&quot;text-sm font-medium&quot;&gt;&#10;                                    Score: {{ review.score }}/10&#10;                                &lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;span class=&quot;text-sm text-gray-500&quot;&gt;&#10;                                {{ formatDate(review.reviewed_at || review.created_at) }}&#10;                            &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div v-if=&quot;review.summary&quot; class=&quot;mb-3&quot;&gt;&#10;                            &lt;h5 class=&quot;font-medium mb-1&quot;&gt;Summary:&lt;/h5&gt;&#10;                            &lt;p class=&quot;text-sm text-gray-700&quot;&gt;{{ review.summary }}&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div v-if=&quot;review.feedback&quot; class=&quot;mb-3&quot;&gt;&#10;                            &lt;h5 class=&quot;font-medium mb-1&quot;&gt;Detailed Feedback:&lt;/h5&gt;&#10;                            &lt;div class=&quot;text-sm text-gray-700 whitespace-pre-line bg-gray-50 p-3 rounded&quot;&gt;&#10;                                {{ review.feedback }}&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- Issues --&gt;&#10;                        &lt;div v-if=&quot;hasIssues(review)&quot; class=&quot;grid grid-cols-1 md:grid-cols-3 gap-4 mt-4&quot;&gt;&#10;                            &lt;div v-if=&quot;review.security_issues?.length&quot;&gt;&#10;                                &lt;h6 class=&quot;font-medium text-red-700 mb-2&quot;&gt;Security Issues&lt;/h6&gt;&#10;                                &lt;div class=&quot;space-y-1&quot;&gt;&#10;                                    &lt;div&#10;                                        v-for=&quot;issue in review.security_issues&quot;&#10;                                        :key=&quot;issue.file + issue.issue&quot;&#10;                                        class=&quot;text-xs bg-red-50 p-2 rounded&quot;&#10;                                    &gt;&#10;                                        &lt;strong&gt;{{ issue.file }}:&lt;/strong&gt; {{ issue.description }}&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div v-if=&quot;review.performance_issues?.length&quot;&gt;&#10;                                &lt;h6 class=&quot;font-medium text-yellow-700 mb-2&quot;&gt;Performance Issues&lt;/h6&gt;&#10;                                &lt;div class=&quot;space-y-1&quot;&gt;&#10;                                    &lt;div&#10;                                        v-for=&quot;issue in review.performance_issues&quot;&#10;                                        :key=&quot;issue.file + issue.issue&quot;&#10;                                        class=&quot;text-xs bg-yellow-50 p-2 rounded&quot;&#10;                                    &gt;&#10;                                        &lt;strong&gt;{{ issue.file }}:&lt;/strong&gt; {{ issue.description }}&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div v-if=&quot;review.code_quality_issues?.length&quot;&gt;&#10;                                &lt;h6 class=&quot;font-medium text-blue-700 mb-2&quot;&gt;Quality Issues&lt;/h6&gt;&#10;                                &lt;div class=&quot;space-y-1&quot;&gt;&#10;                                    &lt;div&#10;                                        v-for=&quot;issue in review.code_quality_issues&quot;&#10;                                        :key=&quot;issue.file + issue.issue&quot;&#10;                                        class=&quot;text-xs bg-blue-50 p-2 rounded&quot;&#10;                                    &gt;&#10;                                        &lt;strong&gt;{{ issue.file }}:&lt;/strong&gt; {{ issue.description }}&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- Suggestions --&gt;&#10;                        &lt;div v-if=&quot;review.suggestions?.length&quot; class=&quot;mt-4&quot;&gt;&#10;                            &lt;h6 class=&quot;font-medium text-green-700 mb-2&quot;&gt;Suggestions&lt;/h6&gt;&#10;                            &lt;div class=&quot;space-y-1&quot;&gt;&#10;                                &lt;div&#10;                                    v-for=&quot;suggestion in review.suggestions&quot;&#10;                                    :key=&quot;suggestion.file + suggestion.suggestion&quot;&#10;                                    class=&quot;text-xs bg-green-50 p-2 rounded&quot;&#10;                                &gt;&#10;                                    &lt;strong&gt;{{ suggestion.file }}:&lt;/strong&gt; {{ suggestion.description }}&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div v-else class=&quot;text-center py-8 text-gray-500&quot;&gt;&#10;                    &lt;i class=&quot;pi pi-comments text-2xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;p class=&quot;mt-2&quot;&gt;No reviews yet&lt;/p&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/Dialog&gt;&#10;    &lt;/MainLayout&gt;&#10;&lt;/template&gt;&#10;&#10;&lt;script setup&gt;&#10;import { ref, onMounted, computed } from 'vue';&#10;import { useRouter } from 'vue-router';&#10;import { useToast } from 'primevue/usetoast';&#10;import Button from 'primevue/button';&#10;import Dialog from 'primevue/dialog';&#10;import DataTable from 'primevue/datatable';&#10;import Column from 'primevue/column';&#10;import Tag from 'primevue/tag';&#10;import Dropdown from 'primevue/dropdown';&#10;import MainLayout from '@/components/CustomComponents/MainLayout.vue';&#10;import PageHeader from '@/components/CustomComponents/PageHeader.vue';&#10;import { useAuth } from '@/utils/composables/useAuth';&#10;&#10;// State&#10;const loading = ref(false);&#10;const pullRequests = ref([]);&#10;const repositories = ref([]);&#10;const statistics = ref({});&#10;const selectedRepositoryId = ref(null);&#10;const selectedState = ref(null);&#10;const showReviewDialog = ref(false);&#10;const selectedPullRequest = ref(null);&#10;const selectedPullRequestReviews = ref([]);&#10;&#10;const router = useRouter();&#10;const toast = useToast();&#10;&#10;// API base URL&#10;const API_BASE = import.meta.env.VITE_API_BASE_URL || 'http://localhost:8000/api';&#10;&#10;// Computed properties&#10;const repositoryOptions = computed(() =&gt; [&#10;    { label: 'All Repositories', value: null },&#10;    ...repositories.value.map(repo =&gt; ({&#10;        label: repo.name,&#10;        value: repo.id&#10;    }))&#10;]);&#10;&#10;const stateOptions = [&#10;    { label: 'All States', value: null },&#10;    { label: 'Open', value: 'open' },&#10;    { label: 'Closed', value: 'closed' },&#10;    { label: 'Merged', value: 'merged' }&#10;];&#10;&#10;// Utility functions&#10;const getAuthHeaders = () =&gt; {&#10;    const token = localStorage.getItem('token');&#10;    if (!token) {&#10;        router.push('/auth/login1');&#10;        return null;&#10;    }&#10;    return {&#10;        'Authorization': `Bearer ${token}`,&#10;        'Content-Type': 'application/json',&#10;        'Accept': 'application/json'&#10;    };&#10;};&#10;&#10;const formatDate = (dateString) =&gt; {&#10;    return new Date(dateString).toLocaleDateString('en-US', {&#10;        year: 'numeric',&#10;        month: 'short',&#10;        day: 'numeric',&#10;        hour: '2-digit',&#10;        minute: '2-digit'&#10;    });&#10;};&#10;&#10;const getStateSeverity = (state) =&gt; {&#10;    switch (state) {&#10;        case 'open': return 'success';&#10;        case 'merged': return 'info';&#10;        case 'closed': return 'warning';&#10;        default: return 'secondary';&#10;    }&#10;};&#10;&#10;const getReviewStatusSeverity = (status) =&gt; {&#10;    switch (status) {&#10;        case 'completed': return 'success';&#10;        case 'pending': return 'warning';&#10;        case 'processing': return 'info';&#10;        case 'failed': return 'danger';&#10;        default: return 'secondary';&#10;    }&#10;};&#10;&#10;const hasAiReview = (reviews) =&gt; {&#10;    return reviews?.some(review =&gt; review.review_type === 'ai_auto');&#10;};&#10;&#10;const hasIssues = (review) =&gt; {&#10;    return (review.security_issues?.length &gt; 0) ||&#10;        (review.performance_issues?.length &gt; 0) ||&#10;        (review.code_quality_issues?.length &gt; 0);&#10;};&#10;&#10;// API functions&#10;const fetchPullRequests = async () =&gt; {&#10;    try {&#10;        loading.value = true;&#10;        const headers = getAuthHeaders();&#10;        if (!headers) return;&#10;&#10;        const params = new URLSearchParams();&#10;        if (selectedRepositoryId.value) params.append('repository_id', selectedRepositoryId.value);&#10;        if (selectedState.value) params.append('state', selectedState.value);&#10;&#10;        const url = `${API_BASE}/pull-requests${params.toString() ? '?' + params.toString() : ''}`;&#10;        const response = await fetch(url, { headers });&#10;&#10;        if (response.status === 401) {&#10;            localStorage.removeItem('token');&#10;            router.push('/auth/login1');&#10;            return;&#10;        }&#10;&#10;        if (!response.ok) {&#10;            const errorData = await response.json();&#10;            throw new Error(errorData.message || 'Failed to fetch pull requests');&#10;        }&#10;&#10;        const data = await response.json();&#10;        pullRequests.value = data.pull_requests?.data || data.pull_requests || [];&#10;&#10;    } catch (error) {&#10;        console.error('Error fetching pull requests:', error);&#10;        toast.add({&#10;            severity: 'error',&#10;            summary: 'Error',&#10;            detail: 'Failed to load pull requests: ' + error.message,&#10;            life: 5000,&#10;        });&#10;    } finally {&#10;        loading.value = false;&#10;    }&#10;};&#10;&#10;const fetchRepositories = async () =&gt; {&#10;    try {&#10;        const headers = getAuthHeaders();&#10;        if (!headers) return;&#10;&#10;        const response = await fetch(`${API_BASE}/repositories`, { headers });&#10;&#10;        if (response.ok) {&#10;            const data = await response.json();&#10;            repositories.value = data.repositories || [];&#10;        }&#10;    } catch (error) {&#10;        console.error('Error fetching repositories:', error);&#10;    }&#10;};&#10;&#10;const fetchStatistics = async () =&gt; {&#10;    try {&#10;        const headers = getAuthHeaders();&#10;        if (!headers) return;&#10;&#10;        const response = await fetch(`${API_BASE}/pull-requests/statistics`, { headers });&#10;&#10;        if (response.ok) {&#10;            const data = await response.json();&#10;            statistics.value = data.statistics || {};&#10;        }&#10;    } catch (error) {&#10;        console.error('Error fetching statistics:', error);&#10;    }&#10;};&#10;&#10;const viewReviews = async (pullRequest) =&gt; {&#10;    try {&#10;        selectedPullRequest.value = pullRequest;&#10;&#10;        const headers = getAuthHeaders();&#10;        if (!headers) return;&#10;&#10;        const response = await fetch(`${API_BASE}/pull-requests/${pullRequest.id}/reviews`, { headers });&#10;&#10;        if (response.ok) {&#10;            const data = await response.json();&#10;            selectedPullRequestReviews.value = data.reviews || [];&#10;            showReviewDialog.value = true;&#10;        } else {&#10;            throw new Error('Failed to fetch reviews');&#10;        }&#10;    } catch (error) {&#10;        console.error('Error fetching reviews:', error);&#10;        toast.add({&#10;            severity: 'error',&#10;            summary: 'Error',&#10;            detail: 'Failed to load reviews: ' + error.message,&#10;            life: 5000,&#10;        });&#10;    }&#10;};&#10;&#10;const triggerReview = async (pullRequest) =&gt; {&#10;    try {&#10;        const headers = getAuthHeaders();&#10;        if (!headers) return;&#10;&#10;        const response = await fetch(`${API_BASE}/pull-requests/${pullRequest.id}/trigger-review`, {&#10;            method: 'POST',&#10;            headers&#10;        });&#10;&#10;        if (response.ok) {&#10;            toast.add({&#10;                severity: 'success',&#10;                summary: 'Success',&#10;                detail: 'Review triggered successfully',&#10;                life: 3000,&#10;            });&#10;&#10;            // Refresh the pull request data&#10;            await fetchPullRequests();&#10;        } else {&#10;            const errorData = await response.json();&#10;            throw new Error(errorData.message || 'Failed to trigger review');&#10;        }&#10;    } catch (error) {&#10;        console.error('Error triggering review:', error);&#10;        toast.add({&#10;            severity: 'error',&#10;            summary: 'Error',&#10;            detail: 'Failed to trigger review: ' + error.message,&#10;            life: 5000,&#10;        });&#10;    }&#10;};&#10;&#10;// Initialize&#10;const { checkAuth } = useAuth();&#10;&#10;onMounted(async () =&gt; {&#10;    if (!checkAuth()) {&#10;        router.push('/auth/login1');&#10;        return;&#10;    }&#10;&#10;    // Check if there's a repository_id in the query parameters&#10;    const { repository_id } = router.currentRoute.value.query;&#10;    if (repository_id) {&#10;        selectedRepositoryId.value = parseInt(repository_id);&#10;    }&#10;&#10;    await Promise.all([&#10;        fetchRepositories(),&#10;        fetchStatistics(),&#10;        fetchPullRequests()&#10;    ]);&#10;});&#10;&lt;/script&gt;&#10;&#10;&lt;style scoped&gt;&#10;@import '@/assets/GlobalStyles.css';&#10;&lt;/style&gt;&#10;" />
              <option name="updatedContent" value="&lt;template&gt;&#10;    &lt;MainLayout&gt;&#10;        &lt;PageHeader&#10;            title=&quot;Pull Requests&quot;&#10;            :subtitle=&quot;`Manage pull requests ${repository ? 'for ' + repository.name : ''}`&quot;&#10;        /&gt;&#10;&#10;        &lt;!-- Filter Controls --&gt;&#10;        &lt;div class=&quot;mt-6 flex flex-wrap gap-4 items-center&quot;&gt;&#10;            &lt;div class=&quot;flex items-center gap-2&quot;&gt;&#10;                &lt;label class=&quot;text-sm font-medium text-gray-700&quot;&gt;Repository:&lt;/label&gt;&#10;                &lt;Dropdown&#10;                    v-model=&quot;selectedRepositoryId&quot;&#10;                    :options=&quot;repositoryOptions&quot;&#10;                    optionLabel=&quot;label&quot;&#10;                    optionValue=&quot;value&quot;&#10;                    placeholder=&quot;All Repositories&quot;&#10;                    class=&quot;w-48&quot;&#10;                    @change=&quot;fetchPullRequests&quot;&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;flex items-center gap-2&quot;&gt;&#10;                &lt;label class=&quot;text-sm font-medium text-gray-700&quot;&gt;State:&lt;/label&gt;&#10;                &lt;Dropdown&#10;                    v-model=&quot;selectedState&quot;&#10;                    :options=&quot;stateOptions&quot;&#10;                    optionLabel=&quot;label&quot;&#10;                    optionValue=&quot;value&quot;&#10;                    placeholder=&quot;All States&quot;&#10;                    class=&quot;w-32&quot;&#10;                    @change=&quot;fetchPullRequests&quot;&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;Button&#10;                label=&quot;Refresh&quot;&#10;                icon=&quot;pi pi-refresh&quot;&#10;                @click=&quot;fetchPullRequests&quot;&#10;                :loading=&quot;loading&quot;&#10;                class=&quot;ml-auto&quot;&#10;            /&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Statistics Cards --&gt;&#10;        &lt;div class=&quot;mt-6 grid grid-cols-1 md:grid-cols-4 gap-4&quot;&gt;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center&quot;&gt;&#10;                    &lt;div class=&quot;p-2 bg-blue-100 rounded-lg&quot;&gt;&#10;                        &lt;svg class=&quot;octicon octicon-git-pull-request text-blue-600&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 16 16&quot; fill=&quot;currentColor&quot;&gt;&#10;                            &lt;path d=&quot;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&quot;&gt;&lt;/path&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;ml-4&quot;&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Total PRs&lt;/p&gt;&#10;                        &lt;p class=&quot;text-2xl font-semibold&quot;&gt;{{ statistics.total || 0 }}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center&quot;&gt;&#10;                    &lt;div class=&quot;p-2 bg-green-100 rounded-lg&quot;&gt;&#10;                        &lt;i class=&quot;pi pi-check-circle text-green-600 text-xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;ml-4&quot;&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Open&lt;/p&gt;&#10;                        &lt;p class=&quot;text-2xl font-semibold&quot;&gt;{{ statistics.open || 0 }}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center&quot;&gt;&#10;                    &lt;div class=&quot;p-2 bg-purple-100 rounded-lg&quot;&gt;&#10;                        &lt;i class=&quot;pi pi-check text-purple-600 text-xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;ml-4&quot;&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Merged&lt;/p&gt;&#10;                        &lt;p class=&quot;text-2xl font-semibold&quot;&gt;{{ statistics.merged || 0 }}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;bg-white rounded-lg shadow p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center&quot;&gt;&#10;                    &lt;div class=&quot;p-2 bg-orange-100 rounded-lg&quot;&gt;&#10;                        &lt;i class=&quot;pi pi-eye text-orange-600 text-xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;ml-4&quot;&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Reviewed&lt;/p&gt;&#10;                        &lt;p class=&quot;text-2xl font-semibold&quot;&gt;{{ statistics.reviewed || 0 }}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Loading state --&gt;&#10;        &lt;div v-if=&quot;loading&quot; class=&quot;mt-8 text-center&quot;&gt;&#10;            &lt;i class=&quot;pi pi-spinner pi-spin text-2xl&quot;&gt;&lt;/i&gt;&#10;            &lt;p class=&quot;mt-2&quot;&gt;Loading pull requests...&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Empty state --&gt;&#10;        &lt;div v-else-if=&quot;pullRequests.length === 0&quot; class=&quot;mt-8 text-center py-12&quot;&gt;&#10;            &lt;i class=&quot;pi pi-git-merge text-6xl text-gray-300&quot;&gt;&lt;/i&gt;&#10;            &lt;h3 class=&quot;mt-4 text-lg font-medium text-gray-900&quot;&gt;No pull requests found&lt;/h3&gt;&#10;            &lt;p class=&quot;mt-2 text-gray-500&quot;&gt;&#10;                {{ selectedState || selectedRepositoryId ? 'Try adjusting your filters' : 'Pull requests will appear here when GitHub webhooks are triggered' }}&#10;            &lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Pull Requests Table --&gt;&#10;        &lt;DataTable&#10;            v-else&#10;            :value=&quot;pullRequests&quot;&#10;            class=&quot;mt-8&quot;&#10;            :paginator=&quot;true&quot;&#10;            :rows=&quot;15&quot;&#10;            :rowsPerPageOptions=&quot;[10, 15, 25]&quot;&#10;            sortMode=&quot;multiple&quot;&#10;        &gt;&#10;            &lt;Column field=&quot;title&quot; header=&quot;Title&quot; sortable&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    &lt;div&gt;&#10;                        &lt;a&#10;                            :href=&quot;slotProps.data.html_url&quot;&#10;                            target=&quot;_blank&quot;&#10;                            class=&quot;font-medium text-indigo-600 hover:text-indigo-900&quot;&#10;                        &gt;&#10;                            {{ slotProps.data.title }}&#10;                        &lt;/a&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-500&quot;&gt;&#10;                            #{{ slotProps.data.github_pr_number }}&#10;                        &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;&#10;            &lt;Column field=&quot;repository.name&quot; header=&quot;Repository&quot; sortable /&gt;&#10;&#10;            &lt;Column field=&quot;state&quot; header=&quot;State&quot; sortable&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    &lt;Tag&#10;                        :value=&quot;slotProps.data.state&quot;&#10;                        :severity=&quot;getStateSeverity(slotProps.data.state)&quot;&#10;                        class=&quot;capitalize&quot;&#10;                    /&gt;&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;&#10;            &lt;Column field=&quot;author_username&quot; header=&quot;Author&quot; sortable&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    &lt;div class=&quot;flex items-center gap-2&quot;&gt;&#10;                        &lt;img&#10;                            v-if=&quot;slotProps.data.author_avatar_url&quot;&#10;                            :src=&quot;slotProps.data.author_avatar_url&quot;&#10;                            :alt=&quot;slotProps.data.author_username&quot;&#10;                            class=&quot;w-6 h-6 rounded-full&quot;&#10;                        &gt;&#10;                        &lt;span&gt;{{ slotProps.data.author_username }}&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;&#10;            &lt;Column field=&quot;head_branch&quot; header=&quot;Branch&quot; sortable&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    &lt;code class=&quot;text-sm bg-gray-100 px-2 py-1 rounded&quot;&gt;&#10;                        {{ slotProps.data.head_branch }}&#10;                    &lt;/code&gt;&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;&#10;            &lt;Column header=&quot;Reviews&quot;&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    &lt;div class=&quot;flex items-center gap-2&quot;&gt;&#10;                        &lt;span class=&quot;text-sm text-gray-600&quot;&gt;&#10;                            {{ slotProps.data.reviews?.length || 0 }} reviews&#10;                        &lt;/span&gt;&#10;                        &lt;Tag&#10;                            v-if=&quot;hasAiReview(slotProps.data.reviews)&quot;&#10;                            value=&quot;AI&quot;&#10;                            severity=&quot;info&quot;&#10;                            class=&quot;text-xs&quot;&#10;                        /&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;&#10;            &lt;Column field=&quot;created_at&quot; header=&quot;Created&quot; sortable&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    {{ formatDate(slotProps.data.created_at) }}&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;&#10;            &lt;Column header=&quot;Actions&quot;&gt;&#10;                &lt;template #body=&quot;slotProps&quot;&gt;&#10;                    &lt;div class=&quot;flex gap-2&quot;&gt;&#10;                        &lt;Button&#10;                            label=&quot;View Reviews&quot;&#10;                            icon=&quot;pi pi-comments&quot;&#10;                            size=&quot;small&quot;&#10;                            text&#10;                            @click=&quot;viewReviews(slotProps.data)&quot;&#10;                        /&gt;&#10;                        &lt;Button&#10;                            v-if=&quot;slotProps.data.state === 'open'&quot;&#10;                            label=&quot;Trigger Review&quot;&#10;                            icon=&quot;pi pi-refresh&quot;&#10;                            size=&quot;small&quot;&#10;                            text&#10;                            @click=&quot;triggerReview(slotProps.data)&quot;&#10;                        /&gt;&#10;                        &lt;Button&#10;                            label=&quot;GitHub&quot;&#10;                            icon=&quot;pi pi-external-link&quot;&#10;                            size=&quot;small&quot;&#10;                            text&#10;                            @click=&quot;() =&gt; window.open(slotProps.data.html_url, '_blank')&quot;&#10;                        /&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/template&gt;&#10;            &lt;/Column&gt;&#10;        &lt;/DataTable&gt;&#10;&#10;        &lt;!-- Review Details Dialog --&gt;&#10;        &lt;Dialog&#10;            v-model:visible=&quot;showReviewDialog&quot;&#10;            header=&quot;Pull Request Reviews&quot;&#10;            modal&#10;            class=&quot;w-full max-w-4xl&quot;&#10;        &gt;&#10;            &lt;div v-if=&quot;selectedPullRequest&quot; class=&quot;space-y-6&quot;&gt;&#10;                &lt;!-- PR Info --&gt;&#10;                &lt;div class=&quot;border-b pb-4&quot;&gt;&#10;                    &lt;h3 class=&quot;text-lg font-semibold&quot;&gt;{{ selectedPullRequest.title }}&lt;/h3&gt;&#10;                    &lt;p class=&quot;text-sm text-gray-600 mt-1&quot;&gt;&#10;                        PR #{{ selectedPullRequest.github_pr_number }} by {{ selectedPullRequest.author_username }}&#10;                    &lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Reviews List --&gt;&#10;                &lt;div v-if=&quot;selectedPullRequestReviews.length &gt; 0&quot; class=&quot;space-y-4&quot;&gt;&#10;                    &lt;h4 class=&quot;font-medium&quot;&gt;Reviews ({{ selectedPullRequestReviews.length }})&lt;/h4&gt;&#10;&#10;                    &lt;div&#10;                        v-for=&quot;review in selectedPullRequestReviews&quot;&#10;                        :key=&quot;review.id&quot;&#10;                        class=&quot;border rounded-lg p-4&quot;&#10;                    &gt;&#10;                        &lt;div class=&quot;flex items-center justify-between mb-3&quot;&gt;&#10;                            &lt;div class=&quot;flex items-center gap-2&quot;&gt;&#10;                                &lt;Tag&#10;                                    :value=&quot;review.review_type === 'ai_auto' ? 'AI Review' : 'Manual Review'&quot;&#10;                                    :severity=&quot;review.review_type === 'ai_auto' ? 'info' : 'success'&quot;&#10;                                /&gt;&#10;                                &lt;Tag&#10;                                    :value=&quot;review.status&quot;&#10;                                    :severity=&quot;getReviewStatusSeverity(review.status)&quot;&#10;                                /&gt;&#10;                                &lt;span v-if=&quot;review.score&quot; class=&quot;text-sm font-medium&quot;&gt;&#10;                                    Score: {{ review.score }}/10&#10;                                &lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;span class=&quot;text-sm text-gray-500&quot;&gt;&#10;                                {{ formatDate(review.reviewed_at || review.created_at) }}&#10;                            &lt;/span&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div v-if=&quot;review.summary&quot; class=&quot;mb-3&quot;&gt;&#10;                            &lt;h5 class=&quot;font-medium mb-1&quot;&gt;Summary:&lt;/h5&gt;&#10;                            &lt;p class=&quot;text-sm text-gray-700&quot;&gt;{{ review.summary }}&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div v-if=&quot;review.feedback&quot; class=&quot;mb-3&quot;&gt;&#10;                            &lt;h5 class=&quot;font-medium mb-1&quot;&gt;Detailed Feedback:&lt;/h5&gt;&#10;                            &lt;div class=&quot;text-sm text-gray-700 whitespace-pre-line bg-gray-50 p-3 rounded&quot;&gt;&#10;                                {{ review.feedback }}&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- Issues --&gt;&#10;                        &lt;div v-if=&quot;hasIssues(review)&quot; class=&quot;grid grid-cols-1 md:grid-cols-3 gap-4 mt-4&quot;&gt;&#10;                            &lt;div v-if=&quot;review.security_issues?.length&quot;&gt;&#10;                                &lt;h6 class=&quot;font-medium text-red-700 mb-2&quot;&gt;Security Issues&lt;/h6&gt;&#10;                                &lt;div class=&quot;space-y-1&quot;&gt;&#10;                                    &lt;div&#10;                                        v-for=&quot;issue in review.security_issues&quot;&#10;                                        :key=&quot;issue.file + issue.issue&quot;&#10;                                        class=&quot;text-xs bg-red-50 p-2 rounded&quot;&#10;                                    &gt;&#10;                                        &lt;strong&gt;{{ issue.file }}:&lt;/strong&gt; {{ issue.description }}&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div v-if=&quot;review.performance_issues?.length&quot;&gt;&#10;                                &lt;h6 class=&quot;font-medium text-yellow-700 mb-2&quot;&gt;Performance Issues&lt;/h6&gt;&#10;                                &lt;div class=&quot;space-y-1&quot;&gt;&#10;                                    &lt;div&#10;                                        v-for=&quot;issue in review.performance_issues&quot;&#10;                                        :key=&quot;issue.file + issue.issue&quot;&#10;                                        class=&quot;text-xs bg-yellow-50 p-2 rounded&quot;&#10;                                    &gt;&#10;                                        &lt;strong&gt;{{ issue.file }}:&lt;/strong&gt; {{ issue.description }}&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div v-if=&quot;review.code_quality_issues?.length&quot;&gt;&#10;                                &lt;h6 class=&quot;font-medium text-blue-700 mb-2&quot;&gt;Quality Issues&lt;/h6&gt;&#10;                                &lt;div class=&quot;space-y-1&quot;&gt;&#10;                                    &lt;div&#10;                                        v-for=&quot;issue in review.code_quality_issues&quot;&#10;                                        :key=&quot;issue.file + issue.issue&quot;&#10;                                        class=&quot;text-xs bg-blue-50 p-2 rounded&quot;&#10;                                    &gt;&#10;                                        &lt;strong&gt;{{ issue.file }}:&lt;/strong&gt; {{ issue.description }}&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- Suggestions --&gt;&#10;                        &lt;div v-if=&quot;review.suggestions?.length&quot; class=&quot;mt-4&quot;&gt;&#10;                            &lt;h6 class=&quot;font-medium text-green-700 mb-2&quot;&gt;Suggestions&lt;/h6&gt;&#10;                            &lt;div class=&quot;space-y-1&quot;&gt;&#10;                                &lt;div&#10;                                    v-for=&quot;suggestion in review.suggestions&quot;&#10;                                    :key=&quot;suggestion.file + suggestion.suggestion&quot;&#10;                                    class=&quot;text-xs bg-green-50 p-2 rounded&quot;&#10;                                &gt;&#10;                                    &lt;strong&gt;{{ suggestion.file }}:&lt;/strong&gt; {{ suggestion.description }}&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div v-else class=&quot;text-center py-8 text-gray-500&quot;&gt;&#10;                    &lt;i class=&quot;pi pi-comments text-2xl&quot;&gt;&lt;/i&gt;&#10;                    &lt;p class=&quot;mt-2&quot;&gt;No reviews yet&lt;/p&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/Dialog&gt;&#10;    &lt;/MainLayout&gt;&#10;&lt;/template&gt;&#10;&#10;&lt;script setup&gt;&#10;import { ref, onMounted, computed } from 'vue';&#10;import { useRouter } from 'vue-router';&#10;import { useToast } from 'primevue/usetoast';&#10;import Button from 'primevue/button';&#10;import Dialog from 'primevue/dialog';&#10;import DataTable from 'primevue/datatable';&#10;import Column from 'primevue/column';&#10;import Tag from 'primevue/tag';&#10;import Dropdown from 'primevue/dropdown';&#10;import MainLayout from '@/components/CustomComponents/MainLayout.vue';&#10;import PageHeader from '@/components/CustomComponents/PageHeader.vue';&#10;import { useAuth } from '@/utils/composables/useAuth';&#10;&#10;// State&#10;const loading = ref(false);&#10;const pullRequests = ref([]);&#10;const repositories = ref([]);&#10;const statistics = ref({});&#10;const selectedRepositoryId = ref(null);&#10;const selectedState = ref(null);&#10;const showReviewDialog = ref(false);&#10;const selectedPullRequest = ref(null);&#10;const selectedPullRequestReviews = ref([]);&#10;&#10;const router = useRouter();&#10;const toast = useToast();&#10;&#10;// API base URL&#10;const API_BASE = import.meta.env.VITE_API_BASE_URL || 'http://localhost:8000/api';&#10;&#10;// Computed properties&#10;const repositoryOptions = computed(() =&gt; [&#10;    { label: 'All Repositories', value: null },&#10;    ...repositories.value.map(repo =&gt; ({&#10;        label: repo.name,&#10;        value: repo.id&#10;    }))&#10;]);&#10;&#10;const stateOptions = [&#10;    { label: 'All States', value: null },&#10;    { label: 'Open', value: 'open' },&#10;    { label: 'Closed', value: 'closed' },&#10;    { label: 'Merged', value: 'merged' }&#10;];&#10;&#10;// Computed property to find the current repository&#10;const repository = computed(() =&gt; {&#10;    if (!selectedRepositoryId.value || !repositories.value.length) return null;&#10;    return repositories.value.find(repo =&gt; repo.id === selectedRepositoryId.value);&#10;});&#10;&#10;// Utility functions&#10;const getAuthHeaders = () =&gt; {&#10;    const token = localStorage.getItem('token');&#10;    if (!token) {&#10;        router.push('/auth/login1');&#10;        return null;&#10;    }&#10;    return {&#10;        'Authorization': `Bearer ${token}`,&#10;        'Content-Type': 'application/json',&#10;        'Accept': 'application/json'&#10;    };&#10;};&#10;&#10;const formatDate = (dateString) =&gt; {&#10;    return new Date(dateString).toLocaleDateString('en-US', {&#10;        year: 'numeric',&#10;        month: 'short',&#10;        day: 'numeric',&#10;        hour: '2-digit',&#10;        minute: '2-digit'&#10;    });&#10;};&#10;&#10;const getStateSeverity = (state) =&gt; {&#10;    switch (state) {&#10;        case 'open': return 'success';&#10;        case 'merged': return 'info';&#10;        case 'closed': return 'warning';&#10;        default: return 'secondary';&#10;    }&#10;};&#10;&#10;const getReviewStatusSeverity = (status) =&gt; {&#10;    switch (status) {&#10;        case 'completed': return 'success';&#10;        case 'pending': return 'warning';&#10;        case 'processing': return 'info';&#10;        case 'failed': return 'danger';&#10;        default: return 'secondary';&#10;    }&#10;};&#10;&#10;const hasAiReview = (reviews) =&gt; {&#10;    return reviews?.some(review =&gt; review.review_type === 'ai_auto');&#10;};&#10;&#10;const hasIssues = (review) =&gt; {&#10;    return (review.security_issues?.length &gt; 0) ||&#10;        (review.performance_issues?.length &gt; 0) ||&#10;        (review.code_quality_issues?.length &gt; 0);&#10;};&#10;&#10;// API functions&#10;const fetchPullRequests = async () =&gt; {&#10;    try {&#10;        loading.value = true;&#10;        const headers = getAuthHeaders();&#10;        if (!headers) return;&#10;&#10;        const params = new URLSearchParams();&#10;        if (selectedRepositoryId.value) params.append('repository_id', selectedRepositoryId.value);&#10;        if (selectedState.value) params.append('state', selectedState.value);&#10;&#10;        const url = `${API_BASE}/pull-requests${params.toString() ? '?' + params.toString() : ''}`;&#10;        const response = await fetch(url, { headers });&#10;&#10;        if (response.status === 401) {&#10;            localStorage.removeItem('token');&#10;            router.push('/auth/login1');&#10;            return;&#10;        }&#10;&#10;        if (!response.ok) {&#10;            const errorData = await response.json();&#10;            throw new Error(errorData.message || 'Failed to fetch pull requests');&#10;        }&#10;&#10;        const data = await response.json();&#10;        pullRequests.value = data.pull_requests?.data || data.pull_requests || [];&#10;&#10;    } catch (error) {&#10;        console.error('Error fetching pull requests:', error);&#10;        toast.add({&#10;            severity: 'error',&#10;            summary: 'Error',&#10;            detail: 'Failed to load pull requests: ' + error.message,&#10;            life: 5000,&#10;        });&#10;    } finally {&#10;        loading.value = false;&#10;    }&#10;};&#10;&#10;const fetchRepositories = async () =&gt; {&#10;    try {&#10;        const headers = getAuthHeaders();&#10;        if (!headers) return;&#10;&#10;        const response = await fetch(`${API_BASE}/repositories`, { headers });&#10;&#10;        if (response.ok) {&#10;            const data = await response.json();&#10;            repositories.value = data.repositories || [];&#10;        }&#10;    } catch (error) {&#10;        console.error('Error fetching repositories:', error);&#10;    }&#10;};&#10;&#10;const fetchStatistics = async () =&gt; {&#10;    try {&#10;        const headers = getAuthHeaders();&#10;        if (!headers) return;&#10;&#10;        const response = await fetch(`${API_BASE}/pull-requests/statistics`, { headers });&#10;&#10;        if (response.ok) {&#10;            const data = await response.json();&#10;            statistics.value = data.statistics || {};&#10;        }&#10;    } catch (error) {&#10;        console.error('Error fetching statistics:', error);&#10;    }&#10;};&#10;&#10;const viewReviews = async (pullRequest) =&gt; {&#10;    try {&#10;        selectedPullRequest.value = pullRequest;&#10;&#10;        const headers = getAuthHeaders();&#10;        if (!headers) return;&#10;&#10;        const response = await fetch(`${API_BASE}/pull-requests/${pullRequest.id}/reviews`, { headers });&#10;&#10;        if (response.ok) {&#10;            const data = await response.json();&#10;            selectedPullRequestReviews.value = data.reviews || [];&#10;            showReviewDialog.value = true;&#10;        } else {&#10;            throw new Error('Failed to fetch reviews');&#10;        }&#10;    } catch (error) {&#10;        console.error('Error fetching reviews:', error);&#10;        toast.add({&#10;            severity: 'error',&#10;            summary: 'Error',&#10;            detail: 'Failed to load reviews: ' + error.message,&#10;            life: 5000,&#10;        });&#10;    }&#10;};&#10;&#10;const triggerReview = async (pullRequest) =&gt; {&#10;    try {&#10;        const headers = getAuthHeaders();&#10;        if (!headers) return;&#10;&#10;        const response = await fetch(`${API_BASE}/pull-requests/${pullRequest.id}/trigger-review`, {&#10;            method: 'POST',&#10;            headers&#10;        });&#10;&#10;        if (response.ok) {&#10;            toast.add({&#10;                severity: 'success',&#10;                summary: 'Success',&#10;                detail: 'Review triggered successfully',&#10;                life: 3000,&#10;            });&#10;&#10;            // Refresh the pull request data&#10;            await fetchPullRequests();&#10;        } else {&#10;            const errorData = await response.json();&#10;            throw new Error(errorData.message || 'Failed to trigger review');&#10;        }&#10;    } catch (error) {&#10;        console.error('Error triggering review:', error);&#10;        toast.add({&#10;            severity: 'error',&#10;            summary: 'Error',&#10;            detail: 'Failed to trigger review: ' + error.message,&#10;            life: 5000,&#10;        });&#10;    }&#10;};&#10;&#10;// Initialize&#10;const { checkAuth } = useAuth();&#10;&#10;onMounted(async () =&gt; {&#10;    if (!checkAuth()) {&#10;        router.push('/auth/login1');&#10;        return;&#10;    }&#10;&#10;    // Check if there's a repository_id in the query parameters&#10;    const { repository_id } = router.currentRoute.value.query;&#10;    if (repository_id) {&#10;        selectedRepositoryId.value = parseInt(repository_id);&#10;    }&#10;&#10;    // Fetch repositories first, then statistics and pull requests&#10;    await fetchRepositories();&#10;    await Promise.all([&#10;        fetchStatistics(),&#10;        fetchPullRequests()&#10;    ]);&#10;});&#10;&lt;/script&gt;&#10;&#10;&lt;style scoped&gt;&#10;@import '@/assets/GlobalStyles.css';&#10;&lt;/style&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>